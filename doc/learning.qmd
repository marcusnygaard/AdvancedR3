---
title: "R CUBED ADVANCED COURSE BABY test"
author:
  - name: Marcus Langeland Larsen Nyg√•rd
    email: marcusn@bmb.sdu.dk
    affiliations: 
      - name: University of Southern Denmark
        address: Denmark
        city: Denmark
        postal-code: 5000
format: html
editor:
  markdown:
    wrap: 72
    canonical: true
---

```{r setup}
targets::tar_config_set(store = here::here("_targets"))
library(tidyverse)
library(targets)
library(tidymodels)
source(here::here("R/functions.R"))
lipidomics <- tar_read(lipidomics)
```

## Results

```{r}
targets::tar_read(df_stats_by_metabolite) %>%
  dplyr::mutate(MeanSD = glue::glue("{value_mean} ({value_sd})")) %>%
  dplyr::select(Metabolite = metabolite, `Mean SD` = MeanSD) %>%
  knitr::kable(caption = "Descriptive statistics of the metabolites")
```

## Building the model

```{r}
log_ref_specs <- logistic_reg() %>%
  set_engine("glm")

log_ref_specs
```

```{r}
column_values_to_snake_case(lipidomics, cols = metabolite)
```

```{r}
lipidomics %>% metabolites_to_wider()
```

```{r}
lipidomics_wide <- lipidomics %>%
  column_values_to_snake_case(cols = metabolite) %>%
  metabolites_to_wider()
```

```{r}
recipe(class ~ metabolite_lipid_ch_3_1 + age + gender,
  data = lipidomics_wide
)
```

```{r}
recipe(lipidomics_wide) %>%
  update_role(metabolite_lipid_ch_3_1, age, gender, new_role = "predictor") %>%
  update_role(class, new_role = "outcome") %>%
  step_normalize(starts_with("metabolite_"))
```

```{r}
recipe_specs <- lipidomics_wide %>%
  create_recipe_spec(metabolite_lipid_ch_3_1)

recipe_specs
```

```{r}
workflow() %>%
  add_model(log_ref_specs) %>%
  add_recipe(recipe_specs)
```

```{r}
model_workflow <- create_model_workflow(
  logistic_reg() %>%
    set_engine("glm"),
  lipidomics_wide %>%
    create_recipe_spec(metabolite_lipid_ch_3_1)
)
model_workflow
```

```{r}
fitted_model <- model_workflow %>%
  fit(lipidomics_wide)
fitted_model
```

```{r}
fitted_model %>%
  workflows::extract_fit_parsnip() %>%
  broom::tidy(exponentiate = TRUE)
```

```{r}
fitted_model %>%
  tidy_model_output()
```

```{r}
create_model_workflow(
  logistic_reg() %>%
    set_engine("glm"),
  lipidomics_wide %>%
    create_recipe_spec(metabolite_lipid_ch_3_1)
) %>%
  fit(lipidomics_wide) %>%
  tidy_model_output()
```

### Running multiple models

```{r}
lipidomics %>%
  split_by_metabolite()
```

```{r}
model_estimates <- lipidomics %>% 
    split_by_metabolite() %>% 
    purrr::map(generate_model_results) %>% 
    purrr::list_rbind() %>% 
    dplyr::filter(stringr::str_detect(term, "metabolite_")) 

model_estimates
```

```{r}
lipidomics %>% 
    dplyr::select(metabolite) %>% 
    dplyr::mutate(term = metabolite) %>% 
    column_values_to_snake_case(term) %>% 
    dplyr::mutate(term = stringr::str_c("metabolite_", term)) %>% 
    dplyr::distinct(term, metabolite) %>% 
    dplyr::right_join(model_estimates, by = "term")
```

```{r}
add_original_metabolite_names(model_estimates, lipidomics)
```

```{r}
calculate_estimates <- function(data) {
    data %>%
        split_by_metabolite() %>%
        purrr::map(generate_model_results) %>%
        purrr::list_rbind() %>%
        dplyr::filter(stringr::str_detect(term, "metabolite_")) %>%
        add_original_metabolite_names(data)
}

lipidomics %>% calculate_estimates()
```

# Figure of model estimates

```{r}
model_estimates <- tar_read(df_model_estimates)
```

```{r}
plot_estimates <- model_estimates %>%
    ggplot(aes(
        x = estimate,
        y = metabolite,
        xmin = estimate - std.error,
        xmax = estimate + std.error
    )) + 
    geom_pointrange()

plot_estimates + 
    coord_fixed(xlim = c(0,5))
```
